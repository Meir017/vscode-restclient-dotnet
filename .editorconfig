# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# All files
[*]
indent_style = space
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
tab_width = 4

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vs# CA2225: Operator overloads have named alternatives
dotnet_diagnostic.CA2225.severity = error

# CA1847: Use char instead of string for single character search
dotnet_diagnostic.CA1847.severity = error

# CA1866: Use char instead of string for single character operations
dotnet_diagnostic.CA1866.severity = error

# CA1846: Prefer AsSpan over Substring
dotnet_diagnostic.CA1846.severity = error

# CA1310: Specify StringComparison for clarity
dotnet_diagnostic.CA1310.severity = error

# CA1848: Use LoggerMessage delegates for better performance
dotnet_diagnostic.CA1848.severity = error

# CA1510: Use ArgumentNullException.ThrowIfNull
dotnet_diagnostic.CA1510.severity = error

# CA1868: Unnecessary guard for HashSet.Add
dotnet_diagnostic.CA1868.severity = error

# CA1854: Prefer TryGetValue over ContainsKey + indexer
dotnet_diagnostic.CA1854.severity = error

# CA1861: Prefer static readonly over constant arrays
dotnet_diagnostic.CA1861.severity = error

# CA1862: Use StringComparison for case-insensitive comparisons
dotnet_diagnostic.CA1862.severity = error

# CA2249: Use string.Contains instead of string.IndexOf
dotnet_diagnostic.CA2249.severity = error}]
indent_size = 2

# JSON files
[*.{json,json5,webmanifest}]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Markdown files
[*.{md,mdx}]
trim_trailing_whitespace = false

# Web files
[*.{htm,html,js,jsm,ts,tsx,css,sass,scss,less,svg,vue}]
indent_size = 2

# Batch files
[*.{cmd,bat}]
end_of_line = crlf

# Shell scripts
[*.sh]
end_of_line = lf

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Code-block preferences
csharp_prefer_braces = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = block_scoped:suggestion
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_primary_constructors = false:suggestion
csharp_style_prefer_top_level_statements = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true:silent
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = error
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = error
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.severity = error
dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_underscore.severity = error
dotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_underscore.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_begins_with_underscore.style = begins_with_underscore

dotnet_naming_rule.constant_should_be_pascal_case.severity = error
dotnet_naming_rule.constant_should_be_pascal_case.symbols = constant
dotnet_naming_rule.constant_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.local_should_be_camel_case.severity = error
dotnet_naming_rule.local_should_be_camel_case.symbols = local
dotnet_naming_rule.local_should_be_camel_case.style = camel_case

dotnet_naming_rule.parameter_should_be_camel_case.severity = error
dotnet_naming_rule.parameter_should_be_camel_case.symbols = parameter
dotnet_naming_rule.parameter_should_be_camel_case.style = camel_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers =

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.constant.applicable_kinds = field, local
dotnet_naming_symbols.constant.applicable_accessibilities = *
dotnet_naming_symbols.constant.required_modifiers = const

dotnet_naming_symbols.local.applicable_kinds = local
dotnet_naming_symbols.local.applicable_accessibilities = local
dotnet_naming_symbols.local.required_modifiers =

dotnet_naming_symbols.parameter.applicable_kinds = parameter
dotnet_naming_symbols.parameter.applicable_accessibilities = *
dotnet_naming_symbols.parameter.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix =
dotnet_naming_style.begins_with_underscore.word_separator =
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

#### Diagnostic Configuration ####

# Code Analysis Rules

# Enable code style analysis at build time
dotnet_analyzer_diagnostic.category-style.severity = error

# Specific rule overrides for better code quality

# IDE0001: Simplify Names
dotnet_diagnostic.IDE0001.severity = error

# IDE0002: Simplify Member Access
dotnet_diagnostic.IDE0002.severity = error

# IDE0003: Remove qualification
dotnet_diagnostic.IDE0003.severity = error

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = error

# IDE0005: Using directive is unnecessary
dotnet_diagnostic.IDE0005.severity = error

# IDE0007: Use implicit type
dotnet_diagnostic.IDE0007.severity = error

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = error

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = error

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = error

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = error

# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = error

# IDE0020: Use pattern matching
dotnet_diagnostic.IDE0020.severity = error

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = error

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = error

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = error

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = error

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = error

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = error

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = error

# IDE0049: Simplify names
dotnet_diagnostic.IDE0049.severity = error

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = error

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = error

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = silent

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = error

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = error

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = error

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = error

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = error

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = error

# IDE0073: File header
dotnet_diagnostic.IDE0073.severity = silent

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = error

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = error

# IDE0083: Use pattern matching
dotnet_diagnostic.IDE0083.severity = error

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = error

# IDE0100: Remove redundant equality
dotnet_diagnostic.IDE0100.severity = error

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

# IDE0130: Namespace does not match folder structure
dotnet_diagnostic.IDE0130.severity = error

# IDE0160: Convert to block scoped namespace
dotnet_diagnostic.IDE0160.severity = silent

# IDE0161: Convert to file scoped namespace
dotnet_diagnostic.IDE0161.severity = silent

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = error

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = error

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = error

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = silent

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = error

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = error

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = error

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = error

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = error

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = error

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = silent

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = error

# Enable nullable reference types globally
nullable = enable
